<icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0"><vcalendar><vevent><properties><summary><text>Usando contenedores para Big Data</text></summary><description><text>En la actualidad existe una variedad bastante grande de contenedores de datos para almacenar grandes cantidades de datos en Python, tanto en memoria como en disco.  En mi taller pasaremos revista a unos cuantos de los más útiles, empezando por los más básicos y generales (listas, diccionarios, NumPy/ndarray, pandas/DataFrames) a los más especializados (RDBMS, PyTables/Table/HDF5,  bcolz/carray/ctable).  Durante el camino se darán pistas de cuando usar unos u otros dependiendo del caso de uso.</text></description><location>Aula 1</location><dtstart><date-time>2015-11-20T15:00:00</date-time></dtstart><dtend><date-time>2015-11-20T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python en gvSIG, el Sistema de Información Geográfica Libre</text></summary><description><text>Taller orientado a los que quieran iniciarse en el uso de python para desarrollar funcionalidades en gvSIG, un Sistema de Información Geográfica libre.La idea seria dividir el taller en tres bloques:1.-Una introducción, de nivel básico. Veremos como manipular datos espaciales y generar nuevas capas a partir de algunas ya existentes.2.-Un ejemplo de manipulación de mapas, de nivel intermedio. 3.-Un ejemplo de creación  de interfaces de usuario desde scripting, de un nivel avanzado.</text></description><location>Aula 2</location><dtstart><date-time>2015-11-20T15:00:00</date-time></dtstart><dtend><date-time>2015-11-20T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Single-Page Applications con Django y Backbone</text></summary><description><text>En este taller llevaremos a cabo un caso práctico. La construcción de una Single-Page Application usando Backbone como herramienta front-end. Ahora que cada día aparece una docena de frameworks de JavaScript, suena sensato buscar algo de estabilidad en un framework de trayectoria ya constatada, como es Backbone. Por otra parte, tener un framework como Django en el back-end proporciona robustez, facilidad de uso y muchísima extensibilidad -gracias al increíble ecosistema pythónico-.</text></description><location>Aula 3</location><dtstart><date-time>2015-11-20T15:00:00</date-time></dtstart><dtend><date-time>2015-11-20T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Coffee Break</text></summary><location>Hall</location><dtstart><date-time>2015-11-20T17:30:00</date-time></dtstart><dtend><date-time>2015-11-20T18:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Introducción a visualizaciones interactivas con Bokeh</text></summary><description><text>Bokeh ( http://bokeh.pydata.org/en/latest/ ) es una librería de visualización de datos con una interfaz concisa y elegante que permite la construcción de gráficos preparados para la web y con interactividad out-of-the-box y sencilla.Diseña avanzados dashboards en Python para un navegador web sin escribir ni una línea de código de Javascript (pero si quieres puedes ;P)Interactividad cliente-side, cliente-servidor, streaming, big data... Simplemente Bokeh! :)</text></description><location>Aula 1</location><dtstart><date-time>2015-11-20T18:00:00</date-time></dtstart><dtend><date-time>2015-11-20T20:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Simplifica tu vida con sistemas complejos y algoritmos genéticos</text></summary><description><text>¿Qué es un algoritmo genético? ¿Qué es un sistema complejo? ¿Cómo puedo usarlos para resolver problemas complicados? En este taller abordaremos estos temas y aprenderemos a diseñar y usar algoritmos de este tipo con Python.</text></description><location>Aula 2</location><dtstart><date-time>2015-11-20T18:00:00</date-time></dtstart><dtend><date-time>2015-11-20T20:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Better async code with Python 3</text></summary><description><text>Learn async web development hands-on by using asyncio event loop in combination with subgenerator delegation syntax (yield from), creating beautiful concurrent code without writing a single callback.</text></description><location>Aula 3</location><dtstart><date-time>2015-11-20T18:00:00</date-time></dtstart><dtend><date-time>2015-11-20T20:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Charla Plenaria</text></summary><location>Paraninfo</location><dtstart><date-time>2015-11-21T09:00:00</date-time></dtstart><dtend><date-time>2015-11-21T10:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>#!/usr/bin/python (Python para Sysadmins)</text></summary><description><text>En esta charla se presenta la experiencia de un Sysadmin utilizando Python como lenguaje de scripting avanzado.Se introducirán funcionalidades básicas del lenguajes así como una serie de módulos y trucos que facilitarán la vida de cualquier administrador de sistemas que quiera ir más allá de bash.Esta es la charla que me hubiera gustado escuchar cuando empecé a escriptar mis primeras tareas para gestionar servidores y servicios y que me hubiera ahorrado tiempo y facilitado la vida.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T10:00:00</date-time></dtstart><dtend><date-time>2015-11-21T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>DSLs: Can't parse that!♫</text></summary><description><text>Se introducirá brevemente qué es un DSL, tipos y cuándo resultan interesantes, mostrando algunos ejemplos. Para pasar a describir un caso práctico, creando un DSL real desde cero para procesamiento de textos, viendo como parsearlo, interpretarlo y resolver un problema de una forma distinta a la que estamos acostumbrados, dándole una nueva perspectiva.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T10:00:00</date-time></dtstart><dtend><date-time>2015-11-21T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Navigating the Data Science Python Ecosystem</text></summary><description><text>Do you feel lost with all the libraries being developed in the Python ecosystem for Data Science? Have you heard of scikit-learn, theano, dask, xray, blaze, gensim, bokeh, pymc3, numba, jupyter..., but don't know where to start or what each library is for? Do you ask yourself, what is Data Science anyway? Deep learning vs Machine learning? Then, this talk is for you! We'll learn what Data Science is, as well as, existing libraries, functionality and applications in the ecosystem.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T10:00:00</date-time></dtstart><dtend><date-time>2015-11-21T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Click: Como hacer interfaces de comandos con Python</text></summary><description><text>Click es un paquete de Python que permite la creación rápida y bonita de interfaces de linea de comandos, utilizando pocas lineas de código, de una manera bastante estructurada y componible. Click resuelve las típicas situaciones en las que el programador se ve obligado a hacer un interfaz de comandos y termina por hacerse uno propio.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T10:40:00</date-time></dtstart><dtend><date-time>2015-11-21T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Escalando una web con python</text></summary><description><text>Construir una web y soportar su crecimiento en tráfico tiene su intríngulis. Unaarquitectura sencilla se irá complicando poco a poco a medida que crece enfuncionalidad y en número de usuarios. Veremos un proyecto simplón, como podríaempezar cualquier web que hiciésemos nosotros mismos y la iremos evolucionando yampliando, descubriendo y solucionando los problemas típicos que surgen a lahora de hacer escalar una web.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T10:40:00</date-time></dtstart><dtend><date-time>2015-11-21T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Autosubmit: investigando el clima con Python</text></summary><description><text>¿Cómo investigar aquello con lo que no puedes experimentar? Utilizando modelos. El problema es que simular algo tan complejo como el clima requiere programas que utilizan cientos de procesadores y generan teras de resultados. En esta charla te contaremos como [Autosubmit](https://pypi.python.org/pypi/autosubmit) es capaz de manejar estos gigantescos experimentos para que los climatólogos puedan dedicarse a la ciencia sin problemas</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T10:40:00</date-time></dtstart><dtend><date-time>2015-11-21T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Coffee Break</text></summary><location>Hall</location><dtstart><date-time>2015-11-21T11:20:00</date-time></dtstart><dtend><date-time>2015-11-21T11:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>let's Twisted again!</text></summary><description><text>Haz que tus programas sean reactivos a determinados eventos de red. Para ello podemos contar con el framework conocido como Twisted, durante la charla aprenderás lo básico para usarla.Twisted es un motor orientado a eventos de redes y tiene licencia de código libre (MIT).</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T11:50:00</date-time></dtstart><dtend><date-time>2015-11-21T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Syntactic Macros in Python</text></summary><description><text>Syntactic Macros enable the programmer to manipulate the shape of the program before executing it allowing to extend the features of the language. Inspired by macropy, in this talk I explain how to get syntactic macros working with Python 3 at import time giving a couple of interesting examples.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T11:50:00</date-time></dtstart><dtend><date-time>2015-11-21T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>SocialLearning: encontrando materiales formativos de manera colaborativa</text></summary><description><text>Social learning es una plataforma de gestión documental orientada al descubrimiento y clasificación de recursos formativos (videos, documentos, páginas web, etc) a partir de búsquedas en redes sociales de forma masiva y automatizada.Es un proyecto libre (https://github.com/alabarga/SocialLearning) desarrollado en Python y utiliza librerías como Django, REST framework, NTLTK, Celery/Redis, etc.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T11:50:00</date-time></dtstart><dtend><date-time>2015-11-21T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>La maquinaria de import, ese mágico desconocido</text></summary><description><text>importar módulos y librerías en python es una de las cosas más mágicas que existen. Básicamente funciona pero no sabemos como ni porque. En la charla se explicará como funciona y porque puede ser útil saber como funciona.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T12:30:00</date-time></dtstart><dtend><date-time>2015-11-21T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>"Embedding" de Python en otras aplicaciones</text></summary><description><text>Es común ampliar las funcionalidades de Python mediante extensiones y módulos externos. Tecnologías como Cython y todo el entorno numpy son posibles mediante la integración de código C compilado en un programa Python en ejecución. Pero es muy interesante, también, el poder incluir un intérprete Python en un programa independiente para poder ampliar sus funcionalidades escribiendo código Python en vez programando en C.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T12:30:00</date-time></dtstart><dtend><date-time>2015-11-21T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Introducción a visualizaciones interactivas con Bokeh</text></summary><description><text>Bokeh ( http://bokeh.pydata.org/en/latest/ ) es una librería de visualización de datos con una interfaz concisa y elegante que permite la construcción de gráficos preparados para la web y con interactividad out-of-the-box y sencilla.Diseña avanzados dashboards en Python para un navegador web sin escribir ni una línea de código de Javascript (pero si quieres puedes ;P)Interactividad cliente-side, cliente-servidor, streaming, big data... Simplemente Bokeh! :)</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T12:30:00</date-time></dtstart><dtend><date-time>2015-11-21T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python Funcional</text></summary><description><text>Implementacion de varios de los elementos que componen la programacion funcional mediante Python.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T13:10:00</date-time></dtstart><dtend><date-time>2015-11-21T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python tips, tricks and dark magic</text></summary><description><text>Python tiene una gran cantidad de funcionalidades ocultas, pero a la vez a la vista de todos. Esta charla descubrir algunas de ellas explicando como funcionan, cuando tiene sentido usarlas y dando casos prácticos de como usarlas con ejemplos de código que las usan.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T13:10:00</date-time></dtstart><dtend><date-time>2015-11-21T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python en la industria: el problema de optimización (matemática) </text></summary><description><text>La optimización matemática es utilizada en la industria para la resolución de diferentes problemas, que van desde la selección óptima de equipos y recursos a la gestión logística de una empresa. En esta charla, estudiantes de ingeniería química de la Universidad de Alicante realizarán una introducción visual a conceptos de optimización, presentarán Pyomo y mostrarán la resolución de casos de estudio de diferentes industrias mediante este lenguaje de modelado algebraico desarrollado en Python.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T13:10:00</date-time></dtstart><dtend><date-time>2015-11-21T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Comida</text></summary><location>Hall</location><dtstart><date-time>2015-11-21T13:50:00</date-time></dtstart><dtend><date-time>2015-11-21T15:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Objetos mutable e inmutables y errores típicos</text></summary><description><text>En esta charla veremos varios errores típicos hechos al usar objetos mutables de Python, revisaremos 5 conceptos clave para entender lo que estaba sucediendo en cada caso y, finalmente, la forma de resolver o evitar esos errores.Nivel requerido: Básico / Intermedio. Los asistentes deben saber algunos conceptos de Python como declaración de clases y funciones, la herencia, atributos de clase...</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T15:00:00</date-time></dtstart><dtend><date-time>2015-11-21T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>SQJobs: Sencillo sistema de tareas en segundo plano</text></summary><description><text>Muchos son los sistemas de tareas en segundo plano en Python, como por ejemplo Celery.Sí, en Ticketea hemos creado uno más, pero intentando hacerlo diferente.Simple Queue Jobs intenta ser una cola de tareas sencilla y fiable que simplemente funcione y cuyo código no intimide a aquellos que busquen familiarizarse con él.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T15:00:00</date-time></dtstart><dtend><date-time>2015-11-21T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Know your models - Statsmodels!</text></summary><description><text>Scikit-learn has become the best known and most used package to perform it-just-works Machine Learning in Python. But what happens when you want to look into what is going on within your models to inspect and improve them? In this talk we will present the not-so-well-known packages statsmodels and patsy that can help us to achieve a better undestanding of your models and your data.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T15:00:00</date-time></dtstart><dtend><date-time>2015-11-21T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Revisión de código en Python</text></summary><description><text>El objetivo de esta charla es dar a conocer los beneficios de la revisión de código, detallando los aspectos prácticos para llevar a cabo esta técnica de manera exitosa en proyectos colaborativos de desarrollo de software escritos en Python.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T15:40:00</date-time></dtstart><dtend><date-time>2015-11-21T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Learning by Trolling</text></summary><description><text>Explicación de diferentes conceptos y caracteristicas de python a traves de formas de trollear a compañeros. (monkeypatching, cache de enteros, excepciones...)</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T15:40:00</date-time></dtstart><dtend><date-time>2015-11-21T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Data structures beyond dicts and lists</text></summary><description><text>As a python backend engineer you might end up using (or abusing) lot's of dicts and lists, iterating on them. This is mainly due their easy usage and might be also  because libraries like pandas or numpy fall down in the domain of data science.We will see a real example where an old implementation is refactored to have better use of pandas and constantly comparing the performance increase.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T15:40:00</date-time></dtstart><dtend><date-time>2015-11-21T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Coffe Break</text></summary><location>Hall</location><dtstart><date-time>2015-11-21T16:20:00</date-time></dtstart><dtend><date-time>2015-11-21T16:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python descriptors al detalle</text></summary><description><text>En esta charla repasaremos el protocolo de los descriptores, casos de uso y sus aplicaciones más directas en la librería estándar, como son properties y slots.La audiencia debería tener un conocimiento medio / alto de Python y entender el data model de los objetos de Python (los magic methods).</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T16:50:00</date-time></dtstart><dtend><date-time>2015-11-21T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Django request-response: Un viaje de ida y vuelta</text></summary><description><text>Todos sabemos que cuando tenemos una aplicación hecha en Django ejecutándose en un servidor, y le llega una petición, tarde o temprano nuestro código se ejecutará y le devolveremos una respuesta al usuario, pero... ¿Qué ocurre antes y después de la ejecución de nuestro código?, ¿qué tareas hace Django por nosotros sin ni siquiera ser conscientes de ello?, ¿es posible modificar este comportamiento?, y lo más importante:  ¿cómo?</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T16:50:00</date-time></dtstart><dtend><date-time>2015-11-21T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Seguridad y criptografía en Python</text></summary><description><text>La charla tendrá como objetivo introducir la criptografía y la seguridad desde el punto de vista del desarrollador, mostrando maneras de cifrar la información con scripts de Python y la información más sensible en aplicaciones web usando Django,comentando la principales vulnerabilidades que podemos encontrar en un sitio web(SQL injection,XSS, CSRF) y cómo Django nos puede ayudar a evitar ataques que se aprovechen de estas vulnerabilidades.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T16:50:00</date-time></dtstart><dtend><date-time>2015-11-21T17:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Extending Python</text></summary><description><text>Python is a great language, but there are occasions where we need access to lowlevel operations or connect with some database driver written in C or we need toovercome to some speed boottleneck in Python due to some limitation in thelanguage, like NumPy or Scikit-learn do, using extensions.With the FFI(Foreign function interface) we can connect Python with otherlanguages like C, C++ and even Rust or Fortran.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-21T17:30:00</date-time></dtstart><dtend><date-time>2015-11-21T18:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Integrando Apache Storm como servidor de aplicaciones Python</text></summary><description><text>Apache Storm es un sistema de procesamiento en tiempo real diseñado para escalar horizontalmente de forma simple y rápida con garantía de procesamiento. Está basado en Java, no obstante, permite utilizar multiples lenguajes de programación, incluido Python, de forma que no necesites usar Java para nada. En esta charla explicaré el caso de uso de Server Density para el procesamiento de "payloads" para la monitorización de servidores.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-21T17:30:00</date-time></dtstart><dtend><date-time>2015-11-21T18:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>PhaseSpace un programa para analizar sistemas dinámicos</text></summary><description><text>PhaseSpace es un programa diseñado para analizar sistemas dinámicos de un modo sencillo. Para ello dibuja el mapa de fases de dicho sistema y además permite dibujar los puntos críticos y las curvas de pendiente 0 e infinito, tanto explícitas como implícitas, así como el campo vectorial y las soluciones del sistema que queremos estudiar. También permite seleccionar el método numérico para realizar los cálculos y cambiar los ejes y el paso de integración.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-21T17:30:00</date-time></dtstart><dtend><date-time>2015-11-21T18:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Lightning Talks</text></summary><location>Aula 1</location><dtstart><date-time>2015-11-21T18:10:00</date-time></dtstart><dtend><date-time>2015-11-21T19:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Implantación de ElasticSearch: problemas y soluciones</text></summary><description><text>En esta charla se presentará de manera resumida un caso real: el proceso de implantación de ElasticSearch en una aplicación de Django. Partiendo de la motivación de implementar un buscador, veremos los problemas encontrados por nuestro equipo (¡y sus soluciones!). A saber: instalación, definición de los documentos, modo de conexión, indexado, particionado y sincronía con nuestra base de datos.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T09:20:00</date-time></dtstart><dtend><date-time>2015-11-22T10:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Sirviendo 1M de tickets en 50 idiomas y 35 divisas</text></summary><description><text>El crecimiento exponencial de Ticketbis nos exige una arquitectura que pueda escalar horizontalmente. Teniendo en cuenta que servimos casi 1M de tickets en 50 idiomas y 35 divisas diferentes, la desnormalización de los datos y su correspondiente cacheo eran necesarios. ¿Queréis saber cómo lo hacemos sin un solo hit a la base de datos? Os doy una pista: demonios pythónicos + Redis + Elasticsearch.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T09:20:00</date-time></dtstart><dtend><date-time>2015-11-22T10:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Es posible hacer una tesis doctoral en turbulencia con Python</text></summary><description><text>La simulación numérica directa de flujos turbulentos es una disciplina particularmente exigente en lo que respecta a manejo de datos a gran escala. Las simulaciones que llevamos a cabo en el grupo de investigación guardan del orden de centenares de terabytes de datos, y su proceso suele generar entre dos y tres veces esta cantidad. Después del primer año de tesis doctoral decidí ponerme de conejillo de indias para comprobar si Python es en la práctica tan bueno como se dice en teoría.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T09:20:00</date-time></dtstart><dtend><date-time>2015-11-22T10:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Como crear un bot para Telegram</text></summary><description><text>En esta charla veremos como es posible crear un bot para Telegram utilizando la libreria pyTelegramBotAPI y Telegram Bot API. Se mostraran los pasos a seguir para crear un bot sencillo que pueda aceptar interacción del usuario</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T10:00:00</date-time></dtstart><dtend><date-time>2015-11-22T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>asyncIO: póngase a la cola por favor</text></summary><description><text>En esta charla veremos como usar python3 con asyncio, websockets y redis paraconstruir un servicio distribuido de colas virtuales con los que controlar deforma ordenada el acceso a un servicio con elevada carga pico.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T10:00:00</date-time></dtstart><dtend><date-time>2015-11-22T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Thumbor, el servidor de imágenes libre e inteligente</text></summary><description><text>Thumbor es un servidor de imágenes escrito en python. Es capaz de procesar imágenes bajo demanda e incluye funcionalidad de procesado (con opencv) para adaptar las redimensiones de manera inteligente. En esta charla introduciré su utilización y entresijos con el despliegue. </text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T10:00:00</date-time></dtstart><dtend><date-time>2015-11-22T10:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Plone 5: el CMS del futuro, en el presente.</text></summary><description><text>Plone es un gestor de documental y contenidos con más de 10 años de recorrido. Creado inicialmente como una "cara bonita" del Content Management Framework ha evolucionado hasta nuestros días para traer una experiencia de uso y funcionalidades del más alto nivel.Con las últimas modificaciones realizadas durante el desarrollo, está a punto de publicarse la versión 5 de este CMS, íntegramente escrito en Python, y que presentaremos en esta charla.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T10:40:00</date-time></dtstart><dtend><date-time>2015-11-22T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Un python nuevo para ti: decorators</text></summary><description><text>Python es un lenguaje de programación con muchas funcionalidades interesantes. Sin embargo, existen ciertas features habituales en otros lenguajes de programación que no tienen cabida en este: sobrecarga de métodos, un operador para la composición de funciones, comprobación de tipos...En esta charla veremos cómo podemos conseguir estas funcionalidades utilizando decorators e inspeccionando los objectos que representan a las funciones.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T10:40:00</date-time></dtstart><dtend><date-time>2015-11-22T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Machine Learning in the Cloud with Python</text></summary><description><text>La charla mostará cómo introducir el aprendizaje automático en cualquier proyecto usando plataformas de SAAS accesibles via API. En particular, nos centraremos en el caso de los servicios disponibles en BigML. Veremos como acceder a ellos a distintos niveles: usando los bindings para Python y también mediante un DSL en línea de comandos.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T10:40:00</date-time></dtstart><dtend><date-time>2015-11-22T11:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Coffe Break</text></summary><location>Hall</location><dtstart><date-time>2015-11-22T11:20:00</date-time></dtstart><dtend><date-time>2015-11-22T11:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Funcional para trollear</text></summary><description><text>Usar lo que nos ofrece python para volver scripts imperativos en funcionales* y trollear a los colegas*Ciertas restricciones aplican</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T11:50:00</date-time></dtstart><dtend><date-time>2015-11-22T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>El módulo "tracemalloc"</text></summary><description><text>El módulo "tracemalloc", añadido a la librería estándar en Python 3.4, permite monitorizar el uso de memoria y nos ayuda a diagnosticar y solucionar "Memory Leaks". Su utilidad es indudable, pero su uso está poco difundido.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T11:50:00</date-time></dtstart><dtend><date-time>2015-11-22T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Trolling Detection with Scikit-learn and NLTK</text></summary><description><text>La inmensa mayoría del contenido que se crea diariamente en Internet es desestructurado. Aproximadamente el 90% del mismo es texto. En la era de la web colaborativa, usamos el lenguaje constantemente, por ejemplo, para escribir una crítica de un producto, comentar una foto o escribir un tweet. Esta información es tremendamente valiosa en muchos sentidos. En esta charla veremos algunas de las herramientas que ofrece el ecosistema Python para comprender, estructurar y extraer valor de un texto.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T11:50:00</date-time></dtstart><dtend><date-time>2015-11-22T12:30:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Having it All: Distributed services with Django, Boto, and SQS queues</text></summary><description><text>How do you let untrained people in your company run sensitive processes on different remote servers? Processes that must run asynchronously and sequentially while accessing different common resources? And how do you do it quickly and make it robust? I will show how we used Django, SQS and Boto to create a distributed and decoupled solution that let users invoke services asynchronously, which is secure, scalable and ensures that processes using common resources ran in sequence.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T12:30:00</date-time></dtstart><dtend><date-time>2015-11-22T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Comparing Python ORM</text></summary><description><text>El objetivo de la charla es mostrar algunos de los sistemas ORM que podemos encontrar dentro del ecosistema de Python como Sqlalchemy, Storm, Sqlobject, Django ORM,realizando una comparativa entre ellos,mostrando ventajas y desventajas de cada uno.Algunas de las características a comparar son performance, eficiencia, tratamiento de caché, consultas.Por ultimo, se comentarán las ventajas que aportan estos sistemas para la seguridad de la aplicaciones web con Django.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T12:30:00</date-time></dtstart><dtend><date-time>2015-11-22T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Tratando datos más allá de los límites de la memoria</text></summary><description><text>En la era del 'Big Data' se necesitan cantidades cada vez más grandes de memoria (RAM) para tratar y analizar estos datos.  Pero tarde o temprano se llega a unos límites por encima de los cuales no se puede (o es muy caro) pasar.El compresor Blosc (blosc.org) y el contenedor de datos bcolz (bcolz.blosc.org), usan las capacidades de los ordenadores modernos (caches, procesadores multihilo y SSDs) para permitir tratar datos más allá los límites de la memoria.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T12:30:00</date-time></dtstart><dtend><date-time>2015-11-22T13:10:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Introducción a los DSL (Domain Specific Languages) en Python</text></summary><description><text>Los lenguajes específicos de dominio son lenguajes especializados, simplificados y limitados a la resolución de problemas de un dominio concreto. Usados correctamente mejoran la productividad de los desarrolladores, así como la comunicación con los usuarios o expertos de otros dominios, entre otras ventajas. En esta charla introductoria veremos qué son, para qué sirven, en qué casos usarlos y algunas librerías de Python que nos facilitarán crear nuestros propios lenguajes específicos de dominio.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T13:10:00</date-time></dtstart><dtend><date-time>2015-11-22T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Metaprogramación en Python</text></summary><description><text>Según wikipedia: “La metaprogramación consiste en escribir programas que escriben o manipulan otros programas (o a sí mismos) como datos, o que hacen en tiempo de compilación parte del trabajo que, de otra forma, se haría en tiempo de ejecución. Esto permite al programador ahorrar tiempo en la producción de código.” En esta charla veremos diferentes mecanismos que Python proporciona como: - Decoradores - Metaclasses.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T13:10:00</date-time></dtstart><dtend><date-time>2015-11-22T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Dive into Scrapy</text></summary><description><text>Scrapy is a fast high-level screen scraping and web crawling framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.In this talk some advanced techniques will be shown based on how Scrapy is used at Scrapinghub.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T13:10:00</date-time></dtstart><dtend><date-time>2015-11-22T13:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Comida</text></summary><location>Hall</location><dtstart><date-time>2015-11-22T13:50:00</date-time></dtstart><dtend><date-time>2015-11-22T15:00:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Life of a Python program</text></summary><description><text>Sometimes is good to know what's happening under the hood, this talk will explain how CPython works internally since we type `python myprogram.py` until our code is finally executedexplaining the process that CPython does to run our programs.The goal of this talk is explain people how to explore the codeof the interpreter itself using some common tools and let regularPython developers that aren't used to work with C lose the fearabout looking under the hood.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T15:00:00</date-time></dtstart><dtend><date-time>2015-11-22T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Hacking the Taiga</text></summary><description><text>Taiga es una herramienta de gestión ágil de proyectos donde prima ante todo la experiencia de usuario. En esta charla trataré de mostrar cómo puedes desarrollar nuevas funcionalidades para ti, tu organización o comunidad, sin necesidad de modificar el core de Taiga.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T15:00:00</date-time></dtstart><dtend><date-time>2015-11-22T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Fiona y Shapely, la punta del iceberg del análisis de datos geográficos con Python</text></summary><description><text>Fiona y Shapely son la puerta de entrada al análisis de datos geográficos con Python. En la charla haremos una introducción básica a su uso y realizaremos un pequeño mapa de dmostación.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T15:00:00</date-time></dtstart><dtend><date-time>2015-11-22T15:40:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Python in the Sky</text></summary><description><text>Case study of Immfly’s Wireless In-Flight Entertainment system, built using Python.</text></description><location>1G-0.4 (Básico)</location><dtstart><date-time>2015-11-22T15:40:00</date-time></dtstart><dtend><date-time>2015-11-22T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Amqp from Python, advanced design patterns</text></summary><description><text>AMQP as standard application layer protocol is widely used to design backends where business logic is spread around different processes using a broker to link them, usually RabbitMQ. AMQP  allows us to use different design patterns than the traditional monolithic backends, where part of your business logic is designed as entities of the AMQP topology. In this talk we will talk about the Python drivers such as Celery, Pika and others, and how they can be used to get the full power of the AMQP.</text></description><location>1G-0.5 (Avanzado)</location><dtstart><date-time>2015-11-22T15:40:00</date-time></dtstart><dtend><date-time>2015-11-22T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Agujeros negros y optimización de código en python</text></summary><description><text>En esta charla atenderemos a la construcción de un raytracer relativista en Python. Nuestro objetivo será conseguir imágenes similares a las observadas en la película Interestellar, mediante la creación de imágenes sintéticas en un entorno de gravedad extrema, como es un agujero negro. Utilizando esto como excusa, analizaremos distintos enfoques para optimizar nuestro código al máximo y conseguir programas eficientes y profesionales a la altura de cualquier otro lenguaje de programación.</text></description><location>1G-0.6 (Científico)</location><dtstart><date-time>2015-11-22T15:40:00</date-time></dtstart><dtend><date-time>2015-11-22T16:20:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Coffe Break</text></summary><location>Hall</location><dtstart><date-time>2015-11-22T16:20:00</date-time></dtstart><dtend><date-time>2015-11-22T16:50:00</date-time></dtend></properties></vevent><vevent><properties><summary><text>Charla Plenaria</text></summary><location>Paraninfo</location><dtstart><date-time>2015-11-22T16:50:00</date-time></dtstart><dtend><date-time>2015-11-22T17:50:00</date-time></dtend></properties></vevent></vcalendar></icalendar>